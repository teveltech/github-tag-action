{
  "_args": [
    [
      "capture-stdout@1.0.0",
      "/Users/orshefi/workspace/ci/github-tag-action"
    ]
  ],
  "_development": true,
  "_from": "capture-stdout@1.0.0",
  "_id": "capture-stdout@1.0.0",
  "_inBundle": false,
  "_integrity": "sha512-71q2IKUS1PAZ95t9lgMsLYoAtYuOrTol1jQLGkuI/8wOLtBvneFdpVqSvT0X4LxD6IDALhwNSEnRPVY/DNUyAg==",
  "_location": "/capture-stdout",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "capture-stdout@1.0.0",
    "name": "capture-stdout",
    "escapedName": "capture-stdout",
    "rawSpec": "1.0.0",
    "saveSpec": null,
    "fetchSpec": "1.0.0"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/capture-stdout/-/capture-stdout-1.0.0.tgz",
  "_spec": "1.0.0",
  "_where": "/Users/orshefi/workspace/ci/github-tag-action",
  "author": {
    "name": "Randy Carver"
  },
  "bugs": {
    "url": "https://github.com/BlueOtterSoftware/capture-stdout/issues"
  },
  "description": "Small efficient ES6 class that captures all stdout calls and stores the calls as an array of strings.   Very useful for confirming expected output behavior during tests.",
  "devDependencies": {
    "chai": "4.1.0",
    "eslint": "4.3.0",
    "eslint-config-airbnb": "15.1.0",
    "eslint-plugin-chai-expect": "1.1.1",
    "eslint-plugin-chai-friendly": "0.3.6",
    "eslint-plugin-import": "2.7.0",
    "eslint-plugin-jsx-a11y": "6.0.2",
    "eslint-plugin-react": "7.1.0",
    "mocha": "3.4.2",
    "pino": "4.7.1"
  },
  "engines": {
    "node": "^8.1.2"
  },
  "homepage": "https://github.com/BlueOtterSoftware/capture-stdout#readme",
  "keywords": [
    "stdout",
    "capture",
    "testing",
    "test",
    "logging",
    "utility"
  ],
  "license": "MIT",
  "main": "capture-stdout.js",
  "name": "capture-stdout",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/BlueOtterSoftware/capture-stdout.git"
  },
  "scripts": {
    "test": "mocha --colors -t 30000 --reporter spec 'tests/*.js'"
  },
  "version": "1.0.0"
}
